{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"channel selection and feature selection BCI arousal patient-2","provenance":[{"file_id":"1WnPcs4NNJw4G-Y5noJs_bYmCH-8NUS99","timestamp":1637696965314},{"file_id":"1_aNd9W_ox0bPqI3ULdUB0VDEOOAvN__A","timestamp":1637169672125}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"q7tNC6EX54Fm"},"source":["#**1. Data Preprocessing**#"]},{"cell_type":"code","metadata":{"id":"q5UDY40xrsZF","executionInfo":{"status":"ok","timestamp":1637780359754,"user_tz":-330,"elapsed":1312,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","%matplotlib inline\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_selection import chi2\n","from sklearn.feature_selection import SelectKBest, SelectPercentile\n","import warnings\n","warnings.filterwarnings(\"ignore\")"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Azg9wbOhz1XJ","executionInfo":{"status":"ok","timestamp":1637698166158,"user_tz":-330,"elapsed":1227,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"e3a94c58-09cb-4a37-b304-a6aeb1a93c3f"},"source":["from google.colab import drive\n","import pickle  \n","drive._mount('/content/drive')\n","drive.mount('/content/drive', force_remount=True)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n","Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"XpDYOiyPQ28F"},"source":["with open('/content/drive/MyDrive/Deap/s02.dat', 'rb') as f:\n"," raw_data = pickle.load(f, encoding='latin1')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Smqczw7Rtm8k"},"source":["pip install skfeature-chappers"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"kxJTyBtEeqHy"},"source":["import numpy as np\n","from skfeature.utility.construct_W import construct_W\n","from scipy.sparse import diags\n","\n","def fisher_score(X, y):\n","    \"\"\"\n","    This function implements the fisher score feature selection, steps are as follows:\n","    1. Construct the affinity matrix W in fisher score way\n","    2. For the r-th feature, we define fr = X(:,r), D = diag(W*ones), ones = [1,...,1]', L = D - W\n","    3. Let fr_hat = fr - (fr'*D*ones)*ones/(ones'*D*ones)\n","    4. Fisher score for the r-th feature is score = (fr_hat'*D*fr_hat)/(fr_hat'*L*fr_hat)-1\n","    Input\n","    -----\n","    X: {numpy array}, shape (n_samples, n_features)\n","        input data\n","    y: {numpy array}, shape (n_samples,)\n","        input class labels\n","    Output\n","    ------\n","    score: {numpy array}, shape (n_features,)\n","        fisher score for each feature\n","    Reference\n","    ---------\n","    He, Xiaofei et al. \"Laplacian Score for Feature Selection.\" NIPS 2005.\n","    Duda, Richard et al. \"Pattern classification.\" John Wiley & Sons, 2012.\n","    \"\"\"\n","\n","    # Construct weight matrix W in a fisherScore way\n","    kwargs = {\"neighbor_mode\": \"supervised\", \"fisher_score\": True, 'y': y}\n","    W = construct_W(X, **kwargs)\n","\n","    # build the diagonal D matrix from affinity matrix W\n","    D = np.array(W.sum(axis=1))\n","    L = W\n","    tmp = np.dot(np.transpose(D), X)\n","    D = diags(np.transpose(D), [0])\n","    Xt = np.transpose(X)\n","    t1 = np.transpose(np.dot(Xt, D.todense()))\n","    t2 = np.transpose(np.dot(Xt, L.todense()))\n","    # compute the numerator of Lr\n","    D_prime = np.sum(np.multiply(t1, X), 0) - np.multiply(tmp, tmp)/D.sum()\n","    # compute the denominator of Lr\n","    L_prime = np.sum(np.multiply(t2, X), 0) - np.multiply(tmp, tmp)/D.sum()\n","    # avoid the denominator of Lr to be 0\n","    D_prime[D_prime < 1e-12] = 10000\n","    lap_score = 1 - np.array(np.multiply(L_prime, 1/D_prime))[0, :]\n","\n","    # compute fisher score from laplacian score, where fisher_score = 1/lap_score - 1\n","    score = 1.0/lap_score - 1\n","    return np.transpose(score)\n","\n","\n","def feature_ranking(score):\n","    \"\"\"\n","    Rank features in descending order according to fisher score, the larger the fisher score, the more important the\n","    feature is\n","    \"\"\"\n","    idx = np.argsort(score, 0)\n","    return idx[::-1]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EpI-gFzRjgGT","executionInfo":{"status":"ok","timestamp":1637698055103,"user_tz":-330,"elapsed":16,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"0ada0a31-e3bd-4b77-e104-6092e6192c2c"},"source":["data = raw_data['data']\n","labels = raw_data['labels']\n","\n","print(\"Labels: \", labels.shape) # trial x label\n","print(\"Data: \", data.shape) # trial x channel x data"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Labels:  (40, 4)\n","Data:  (40, 40, 8064)\n"]}]},{"cell_type":"code","metadata":{"id":"FTfibgB5c63Y"},"source":["\"\"\"\n","em_labels = []\n","for i in range(0, labels.shape[0]):\n","\tif (labels[i][0]>5): #high valence\n","\t\tif(labels[i][1]>5): # high arousal\n","\t\t\tem_labels.append(1) # HVHA\n","\t\telse:\n","\t\t\tem_labels.append(0) # HVLA\n","\telse: # low valence\n","\t\tif(labels[i][1]>5): # high arousal\n","\t\t\tem_labels.append(2) #LVHA\n","\t\telse:\n","\t\t\tem_labels.append(3) # LVLA\n","\"\"\"\n","em_labels = []\n","for i in range(0, labels.shape[0]):\n","\tif (labels[i][1]>5): #high arousal\n","\t\t\tem_labels.append(0) # HVHA\n","\telse: # low arousal\n","\t\t\tem_labels.append(1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3jCP0SMBc9iu","executionInfo":{"status":"ok","timestamp":1637698065183,"user_tz":-330,"elapsed":578,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"ab5453dc-52dd-477a-ad3e-00f780105e4a"},"source":["print(em_labels)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0]\n"]}]},{"cell_type":"markdown","metadata":{"id":"eQlRP4LrOMlk"},"source":["# Fisher's Score for Theta Band"]},{"cell_type":"code","metadata":{"id":"Na1SqsWbr2y1"},"source":["# load dataset\n","data_theta = pd.read_csv('/content/drive/MyDrive/s02_theta.csv')\n","# features from all the channels from the theta band only\n","data_theta.shape\n","data_theta['videos'] = em_labels\n","data_theta['videos'].unique()\n","draft = ['Fp1',\t'AF3',\t'F3',\t'F7',\t'FC5',\t'FC1',\t'C3',\t'T7',\t'CP5',\t'CP1',\t'P3',\t'P7',\t'PO3',\t'O1',\t'Oz',\t'Pz',\t'Fp2',\t'AF4',\\\n","         'Fz',\t'F4',\t'F8',\t'FC6',\t'FC2',\t'Cz',\t'C4',\t'T8',\t'CP6',\t'CP2',\t'P4',\t'P8',\t'PO4',\t'O2']\n","col_names = []\n","for i in range(0, len(draft)):\n","    col_names.append(str(draft[i]) + \"Theta\")\n","X = data_theta[col_names]  # taking only first 32 channels (EEG signals)\n","y = data_theta['videos']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\n","X_train = np.array(X_train)\n","y_train = np.array(y_train)\n","f_score_theta = fisher_score(X_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"6jeXnumcG2JB"},"source":["# Fisher Score for Alpha Band"]},{"cell_type":"code","metadata":{"id":"C7fJ9fMdGVbQ"},"source":["# load dataset\n","data_alpha = pd.read_csv('/content/drive/MyDrive/s02_alpha.csv')\n","# features from all the channels from the theta band only\n","data_alpha.shape\n","data_alpha['videos'] = em_labels\n","data_alpha['videos'].unique()\n","draft = ['Fp1',\t'AF3',\t'F3',\t'F7',\t'FC5',\t'FC1',\t'C3',\t'T7',\t'CP5',\t'CP1',\t'P3',\t'P7',\t'PO3',\t'O1',\t'Oz',\t'Pz',\t'Fp2',\t'AF4', 'Fz',\t'F4',\t'F8',\t'FC6',\t'FC2',\t'Cz',\t'C4',\t'T8',\t'CP6',\t'CP2',\t'P4',\t'P8',\t'PO4',\t'O2']\n","col_names = []\n","for i in range(0, len(draft)):\n","    col_names.append(str(draft[i]) + \"Alpha\")\n","X = data_alpha[col_names]  # taking only first 32 channels (EEG signals)\n","y = data_alpha['videos']\n","y.head()\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\n","X_train = np.array(X_train)\n","y_train = np.array(y_train)\n","f_score_alpha = fisher_score(X_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Np4pvMpaWAhN"},"source":["# Fisher Score for Beta Band"]},{"cell_type":"code","metadata":{"id":"9LA2tAAslnGK"},"source":["# load dataset\n","data_beta = pd.read_csv('/content/drive/MyDrive/s02_beta.csv')\n","# features from all the channels from the theta band only\n","data_beta.shape\n","data_beta['videos'] = em_labels\n","data_beta['videos'].unique()\n","draft = ['Fp1',\t'AF3',\t'F3',\t'F7',\t'FC5',\t'FC1',\t'C3',\t'T7',\t'CP5',\t'CP1',\t'P3',\t'P7',\t'PO3',\t'O1',\t'Oz',\t'Pz',\t'Fp2',\t'AF4', 'Fz',\t'F4',\t'F8',\t'FC6',\t'FC2',\t'Cz',\t'C4',\t'T8',\t'CP6',\t'CP2',\t'P4',\t'P8',\t'PO4',\t'O2']\n","col_names = []\n","for i in range(0, len(draft)):\n","    col_names.append(str(draft[i]) + \"Beta\")\n","X = data_beta[col_names]  # taking only first 32 channels (EEG signals)\n","y = data_beta['videos']\n","X_train = np.array(X_train)\n","y_train = np.array(y_train)\n","f_score_beta = fisher_score(X_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"uxn9t3hDWEBw"},"source":["# Fisher Score for Gamma Band"]},{"cell_type":"code","metadata":{"id":"7Q0uOFsDWEBx"},"source":["# load dataset\n","data_gamma = pd.read_csv('/content/drive/MyDrive/s02_gamma.csv')\n","# features from all the channels from the theta band only\n","data_gamma.shape\n","data_gamma['videos'] = em_labels\n","data_gamma['videos'].unique()\n","draft = ['Fp1',\t'AF3',\t'F3',\t'F7',\t'FC5',\t'FC1',\t'C3',\t'T7',\t'CP5',\t'CP1',\t'P3',\t'P7',\t'PO3',\t'O1',\t'Oz',\t'Pz',\t'Fp2',\t'AF4', 'Fz',\t'F4',\t'F8',\t'FC6',\t'FC2',\t'Cz',\t'C4',\t'T8',\t'CP6',\t'CP2',\t'P4',\t'P8',\t'PO4',\t'O2']\n","col_names = []\n","for i in range(0, len(draft)):\n","    col_names.append(str(draft[i]) + \"Gamma\")\n","X = data_gamma[col_names]  # taking only first 32 channels (EEG signals)\n","y = data_gamma['videos']\n","y.head()\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.3, random_state = 0)\n","X_train = np.array(X_train)\n","y_train = np.array(y_train)\n","f_score_gamma = fisher_score(X_train, y_train)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sUoClL1YB5aW"},"source":["# Total Avearge F-Score(Theta,Alpha,Beta,Gamma)"]},{"cell_type":"code","metadata":{"id":"LCtwrlPCB5C1"},"source":["final_f_score = (f_score_theta + f_score_alpha + f_score_beta + f_score_gamma)/4"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GB2MaoDXJC0O","executionInfo":{"status":"ok","timestamp":1637698202969,"user_tz":-330,"elapsed":594,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"c856c011-d893-42c2-cf45-2ea1f137fa63"},"source":["fvalues = pd.Series(final_f_score)\n","X_train = pd.DataFrame(X_train)\n","fvalues.index = draft\n","fvalues.sort_values(ascending=False)\n","fvalues.to_csv('fscore_final.csv')\n","print(fvalues)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Fp1    0.001836\n","AF3    0.001542\n","F3     0.003714\n","F7     0.000959\n","FC5    0.003942\n","FC1    0.017917\n","C3     0.001180\n","T7     0.000813\n","CP5    0.001619\n","CP1    0.002045\n","P3     0.003449\n","P7     0.003043\n","PO3    0.016261\n","O1     0.001300\n","Oz     0.010089\n","Pz     0.031921\n","Fp2    0.008281\n","AF4    0.002010\n","Fz     0.001149\n","F4     0.001313\n","F8     0.002101\n","FC6    0.001666\n","FC2    0.003818\n","Cz     0.003430\n","C4     0.002031\n","T8     0.007075\n","CP6    0.006674\n","CP2    0.001685\n","P4     0.001737\n","P8     0.027963\n","PO4    0.002458\n","O2     0.000109\n","dtype: float64\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"4JomiwHHuhE8","executionInfo":{"status":"ok","timestamp":1637698207027,"user_tz":-330,"elapsed":11,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"ba19e054-5824-4069-dc3a-e3b7f84ce644"},"source":["fvalues.sort_values(ascending = False).plot.bar(figsize=(10,8))"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f4302c2d710>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"GJHHjtp-rOo_"},"source":["# Classification"]},{"cell_type":"code","metadata":{"id":"5PhZZyG55qSM"},"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm\n","from sklearn.metrics import accuracy_score"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"RyDSZVATz2Pw"},"source":["all_data = pd.read_csv(\"/content/drive/MyDrive/s02.csv\")\n","data = all_data.drop('video', axis = 1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rxoQsqyl-sC-"},"source":["import pandas as pd\n","from sklearn.model_selection import KFold \n","from sklearn.neural_network import MLPClassifier\n","from sklearn.metrics import accuracy_score\n","\n","#Loading the dataset\n","def svmclassifier(channel_name):\n","  channel_names = []\n","  for i in range(0, len(channel_name)):\n","    draft = channel_name[i]\n","    channel_names.append(draft + \"Alpha\")\n","    channel_names.append(draft + \"Beta\")\n","    channel_names.append(draft + \"Gamma\")\n","    channel_names.append(draft + \"Theta\")\n","  x = data[channel_names]\n","  y = np.array(em_labels)\n","\n","  # Implementing cross validation\n","  k = 10\n","  kf = KFold(n_splits = k)\n","\n","  model = svm.SVC(kernel='poly')\n","  acc_score = []\n","\n","  for train_index , test_index in kf.split(x):\n","      x_train , x_test = x.iloc[train_index,:],x.iloc[test_index,:]\n","      y_train , y_test = y[train_index] , y[test_index]\n","      model.fit(x_train, y_train)\n","      pred_values = model.predict(x_test)\n","      acc = accuracy_score(pred_values , y_test)\n","      acc_score.append(acc)\n","\n","  avg_acc_score = sum(acc_score)/k\n","  #print('accuracy of each fold - {}'.format(acc_score))\n","  print('Avg accuracy : {}'.format(avg_acc_score))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dVWbJk9d6nXf","executionInfo":{"status":"ok","timestamp":1637698285022,"user_tz":-330,"elapsed":656,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"36f428d8-43ca-44fb-a142-5133f97e7bec"},"source":["svmclassifier([\"Pz\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.525\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sRWJudTJ7Gf9","executionInfo":{"status":"ok","timestamp":1637698293520,"user_tz":-330,"elapsed":576,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"e05c8c68-cff8-4df9-bff9-f4904363018b"},"source":["svmclassifier([\"Pz\", \"P8\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.575\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SNPc-UdF7V3z","executionInfo":{"status":"ok","timestamp":1637698312645,"user_tz":-330,"elapsed":567,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"eb5181f3-c3e9-430a-a457-a3ab7e3bf8d3"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"p2lIplKV7pz0","executionInfo":{"status":"ok","timestamp":1637698328375,"user_tz":-330,"elapsed":584,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"fdfa00cf-bf04-4ba8-e304-82d17dc03525"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n-zfq7Cw7qYZ","executionInfo":{"status":"ok","timestamp":1637698343509,"user_tz":-330,"elapsed":567,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"fd456175-e4f0-4cf6-ea4f-fb296b9dfe2a"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hpXC6LNZ7qbz","executionInfo":{"status":"ok","timestamp":1637698366381,"user_tz":-330,"elapsed":575,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"f87b246d-b87f-4333-c08b-c47a970b85ec"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1UEVteo47qd8","executionInfo":{"status":"ok","timestamp":1637698391664,"user_tz":-330,"elapsed":726,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"764fb11e-fa6b-4249-c3fe-ee8ff5354294"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q67hvpRUGiGL","executionInfo":{"status":"ok","timestamp":1637698411099,"user_tz":-330,"elapsed":611,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"36e36230-2c97-40eb-ec25-fd51f81ddb93"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t0KN9lzbG0x4","executionInfo":{"status":"ok","timestamp":1637698437399,"user_tz":-330,"elapsed":721,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"61b06b9a-7c9e-4e39-ad7c-0ee441743c5d"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZgXsIaxXEFRI","executionInfo":{"status":"ok","timestamp":1637698454567,"user_tz":-330,"elapsed":648,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"2b141bf6-296a-42d4-f007-e91f4f0ae004"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"id":"J3kHmoT6GFPH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1637698469519,"user_tz":-330,"elapsed":567,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"5c2be879-bd54-4de1-d393-323ccd67364f"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qx6LJkm4b3lL","executionInfo":{"status":"ok","timestamp":1637698486821,"user_tz":-330,"elapsed":615,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"defdf6e1-212f-4982-d8dd-f22ccd29b352"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I61xYVUfb70j","executionInfo":{"status":"ok","timestamp":1637698505328,"user_tz":-330,"elapsed":654,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"03374a53-b861-4663-b21b-4ecadacdd7a4"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7wZgGqzScAUd","executionInfo":{"status":"ok","timestamp":1637698523132,"user_tz":-330,"elapsed":566,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"d0fc489b-3539-4c6d-9ae2-385a6da4acce"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-RQiDaT0cEr0","executionInfo":{"status":"ok","timestamp":1637698547649,"user_tz":-330,"elapsed":620,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"5ffbbb02-5f92-43a3-d1c4-2198b0c8a422"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TOyTwr8QcKqT","executionInfo":{"status":"ok","timestamp":1637698566196,"user_tz":-330,"elapsed":693,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"7b190d82-f469-45e9-e80a-5c8f04120153"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lHWQG0PjcPLB","executionInfo":{"status":"ok","timestamp":1637698584812,"user_tz":-330,"elapsed":600,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"4bdceecb-f95d-4325-cbf6-0c36fb5ee0c8"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M8zn0YqxcTu_","executionInfo":{"status":"ok","timestamp":1637698602339,"user_tz":-330,"elapsed":680,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"c97d4381-9117-4944-a53f-1a585a30171a"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\",\"C4\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7yk41MfxcX-H","executionInfo":{"status":"ok","timestamp":1637698656367,"user_tz":-330,"elapsed":622,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"dafe1bed-1a5e-4d9a-acbf-ad4997153fae"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\",\"C4\", \"AF4\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2FWRR5SocgUi","executionInfo":{"status":"ok","timestamp":1637698688741,"user_tz":-330,"elapsed":589,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"a53b84ea-2522-4b50-acf4-2e6f48334028"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\", \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\",\"C4\", \"AF4\", \"Fp1\", \"P4\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zediLQApcqDl","executionInfo":{"status":"ok","timestamp":1637698716560,"user_tz":-330,"elapsed":613,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"4ec43175-9d9c-4edf-ed5a-971799cae1e8"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\",\\\n","               \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\",\"C4\", \"AF4\", \"Fp1\", \"P4\",\\\n","               \"CP2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vTJhChzpcz5E","executionInfo":{"status":"ok","timestamp":1637698837106,"user_tz":-330,"elapsed":609,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"21c174d2-1e6c-4892-f7fc-cbb54a69e8ef"},"source":["svmclassifier([\"Pz\", \"P8\", \"FC1\", \"PO3\", \"Oz\", \"Fp2\", \"T8\", \"CP6\", \"FC5\", \"FC2\",\\\n","               \"F3\", \"P3\", \"Cz\", \"P7\", \"PO4\", \"F8\", \"CP1\",\"C4\", \"AF4\", \"Fp1\", \"P4\",\\\n","               \"CP2\",\"FC6\",\"CP5\", \"AF3\", \"F4\", \"O1\", \"C3\", \"Fz\", \"F7\", \"T7\", \"O2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x-jjFXFOc4bk","executionInfo":{"status":"ok","timestamp":1637699004501,"user_tz":-330,"elapsed":837,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"3b30c5fc-0f0c-45aa-aa52-4fd30b7038cd"},"source":["svmclassifier([\"O2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kyucXb_4dVX_","executionInfo":{"status":"ok","timestamp":1637699034254,"user_tz":-330,"elapsed":596,"user":{"displayName":"SHYAM MARJIT","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GjgXWgt6yPRlb1Vc2PDp-7CmKEzAlS0XLO2cxEV=s64","userId":"10874093040693940713"}},"outputId":"22c24c42-46d8-4142-ff1c-a3ef56b58e69"},"source":["svmclassifier([\"Pz\", \"O2\"])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Avg accuracy : 0.6\n"]}]},{"cell_type":"code","metadata":{"id":"UX-FrjBCd-uw"},"source":[""],"execution_count":null,"outputs":[]}]}